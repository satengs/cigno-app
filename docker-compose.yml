version: '3.8'

services:
  # Cigno Platform - Next.js Application
  cigno-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # MongoDB Connection
      MONGODB_URI: ${MONGODB_URI}
      
      # AI/LLM Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LLM_PROVIDER: ${LLM_PROVIDER:-openai}
      ALLOW_EXTERNAL_AI: ${ALLOW_EXTERNAL_AI:-false}
      
      # Application Environment
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_TELEMETRY_DISABLED: 1
      HOSTNAME: "0.0.0.0"
      PORT: 3000
    env_file:
      - .env.local
    restart: unless-stopped
    networks:
      - cigno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Vector Database for AI Features
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    environment:
      QDRANT__SERVICE__API_KEY: ""
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped
    networks:
      - cigno-network

  # Optional: Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - cigno-network

  # Optional: Nginx Reverse Proxy for Production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs
    depends_on:
      - cigno-app
    restart: unless-stopped
    networks:
      - cigno-network
    profiles:
      - production

volumes:
  qdrant_storage:
  redis_data:

networks:
  cigno-network:
    driver: bridge